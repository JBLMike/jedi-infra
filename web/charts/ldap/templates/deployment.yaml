apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ldap.fullname" . }}
  labels:
    {{- include "ldap.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ldap.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.strategy }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ldap.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ldap.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: tcp
              containerPort: 1389
              protocol: TCP
          env:
            - name: OPENLDAP_ROOT_DN
              valueFrom:
                secretKeyRef:
                  name: {{ include "ldap.fullname" . }}-root-secret
                  key: username
            - name: OPENLDAP_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ldap.fullname" . }}-root-secret
                  key: password
          {{- if .Values.env }}
          envFrom:
            - secretRef:
                name: {{ include "ldap.fullname" . }}-env
          {{- end }}
          livenessProbe:
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 10
            tcpSocket:
              port: tcp
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 10
            exec:
              command: ['/usr/bin/ldapwhoami', '-x', '-h', '127.0.0.1', '-p', '1389']
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.volumes.data }}
          volumeMounts:
            - mountPath: /var/lib/ldap
              name: data
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumes.data }}
      volumes:
        - name: data
          {{- toYaml . | nindent 10 }}
      {{- end }}
