apiVersion: v1
kind: Secret
metadata:
  name: {{ include "logstash.fullname" . }}-pipeline
  labels:
    {{- include "logstash.labels" . | nindent 4 }}
type: Opaque
stringData:
  beats.conf: |
    input {
      beats {
        port => 5044
      }
    }
  jka.conf: |
    filter {
      # JKA Server Log
      if "jka-games" in [tags] {
        grok {
          match => [ "message", "\[%{TIMESTAMP_ISO8601:timestamp} \| %{DATA} \| %{NUMBER:uptime}\] %{GREEDYDATA:logmsg}" ]
        }
        grok {
          match => [ "logmsg", "Admin Command %{WORD:commandname} used by (?:client %{NUMBER:clientnum} \(%{DATA:playername}\)|server \(or Rcon\)), %{GREEDYDATA:commandargs}" ]
          add_field => [ "commandtype", "admin" ]
        }
        grok {
          match => [
            "logmsg", "(?<commandname>say(?:_\w+)?): %{DATA:playername}\^7: \^\d%{GREEDYDATA:commandargs}",
            "logmsg", "(?<commandname>say_emote): %{DATA:playername}\^7 %{GREEDYDATA:commandargs}",
            "logmsg", "(?<commandname>tell): %{DATA:playername}\^7 to %{DATA:targetname}\^7: \^6%{GREEDYDATA:commandargs}",
            "logmsg", "(?<commandname>comm): %{DATA:playername}\^7 to %{DATA:targetname}\^7: %{GREEDYDATA:commandargs}"
          ]
          add_field => [ "commandtype", "normal" ]
        }
        grok {
          match => [
            "logmsg", "(?<eventname>Client(?:Begin|Disconnect)): %{NUMBER:clientnum} \(%{DATA:playername}\)",
            "logmsg", "(?<eventname>ClientConnect): %{NUMBER:clientnum} \(IP: %{IP:clientip}, name: %{DATA:playername}\)",
            "logmsg", "(?<eventname>ClientUserinfoChanged): %{DATA:playername}\^7 renamed to %{GREEDYDATA:targetname}"
          ]
          add_field => [ "eventtype", "client" ]
        }
        grok {
          match => [
            "logmsg", "(?<eventname>Account login) \(adminRank %{NUMBER:adminrank}: %{DATA}, username: %{DATA:username}\^7\): client %{NUMBER:clientnum} \(%{DATA:playername}\)",
            "logmsg", "(?<eventname>Account logout): client %{NUMBER:clientnum} \(%{DATA:playername}\)",
            "logmsg", "(?<eventname>Account %{DATA}): %{GREEDYDATA:eventargs}"
          ]
          add_field => [ "eventtype", "account" ]
        }
      }
      # JKA Player Stats
      if "jka-playerstats" in [tags] {
        grok {
          match => [ "message", "%{TIMESTAMP_ISO8601:timestamp};\"%{DATA:playername}\";%{NUMBER:playerping};%{NUMBER:playerscore}" ]
        }
      }
      # JKA Server Stats
      if "jka-serverstats" in [tags] {
        grok {
          match => [ "message", "%{TIMESTAMP_ISO8601:timestamp};%{DATA:mapname};%{NUMBER:playercount};%{NUMBER:playermax}" ]
        }
      }
      # JKA All Logs
      if "jka-games" in [tags] or "jka-playerstats" in [tags] or "jka-serverstats" in [tags] {
        grok {
          match => [ "[log][file][path]", "/(?<servername>[^/]+)/(?<modname>[^/]+)/[^/]+\.log" ]
        }
        date {
          match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
          timezone => "UTC"
          remove_field => [ "timestamp" ]
        }
        mutate {
          gsub => [
            "playername", "\^[0-9a-zA-Z]", "",
            "targetname", "\^[0-9a-zA-Z]", ""
          ]
          convert => [
            "playerping", "integer",
            "playerscore", "integer",
            "playercount", "integer",
            "playermax", "integer"
          ]
          remove_field => [ "agent", "ecs", "event", "host", "input", "log" ]
        }
        geoip {
          source => "clientip"
          target => "geoip"
          ecs_compatibility => "disabled"
        }
      }
    }
  elasticsearch.conf: |
    output {
      if "${ELASTICSEARCH_HOSTS:}" != "" {
        elasticsearch {
          hosts => "${ELASTICSEARCH_HOSTS:}"
          user => "${ELASTICSEARCH_USERNAME:}"
          password => "${ELASTICSEARCH_PASSWORD:}"
          ssl_certificate_authorities => "${ELASTICSEARCH_CACERT:}"
          ecs_compatibility => "disabled"
        }
      }
    }
  activemq.conf: |
    output {
      if "${ACTIVEMQ_HOST:}" != "" {
        # JKA Server Log
        if "jka-games" in [tags] {
          stomp {
            host => "${ACTIVEMQ_HOST:}"
            port => 61613
            destination => "/topic/jka.%{modname}.%{servername}.games.log"
            headers => [ "amq-msg-type", "text" ]
          }
        }
      }
    }
  google_pubsub.conf: |
    output {
      if "${GOOGLE_PUBSUB_PROJECT_ID:}" != "" and "${GOOGLE_PUBSUB_TOPIC:}" != "" {
        # JKA Server Log
        if "jka-games" in [tags] {
          google_pubsub {
            project_id => "${GOOGLE_PUBSUB_PROJECT_ID:}"
            topic => "${GOOGLE_PUBSUB_TOPIC:}"
            json_key_file => "${GOOGLE_PUBSUB_JSON_KEY_FILE:}"
            delay_threshold_secs => 1
          }
        }
      }
    }
  {{- if .Values.pipeline }}
  {{- toYaml .Values.pipeline | nindent 2 }}
  {{- end }}
